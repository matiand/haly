/* tslint:disable */
/* eslint-disable */
/**
 * Haly API
 * An ASP.NET Core Web API that adds quality of life improvements to Spotify and helps with music exploration
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { UpdatePlaybackCommand } from './UpdatePlaybackCommand';
import {
    UpdatePlaybackCommandFromJSON,
    UpdatePlaybackCommandFromJSONTyped,
    UpdatePlaybackCommandToJSON,
} from './UpdatePlaybackCommand';

/**
 * 
 * @export
 * @interface PutPlaybackRequest
 */
export interface PutPlaybackRequest {
    /**
     * 
     * @type {string}
     * @memberof PutPlaybackRequest
     */
    contextUri?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PutPlaybackRequest
     */
    trackUri?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof PutPlaybackRequest
     */
    withImprovedShuffle: boolean;
}

/**
 * Check if a given object implements the PutPlaybackRequest interface.
 */
export function instanceOfPutPlaybackRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "withImprovedShuffle" in value;

    return isInstance;
}

export function PutPlaybackRequestFromJSON(json: any): PutPlaybackRequest {
    return PutPlaybackRequestFromJSONTyped(json, false);
}

export function PutPlaybackRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): PutPlaybackRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'contextUri': !exists(json, 'contextUri') ? undefined : json['contextUri'],
        'trackUri': !exists(json, 'trackUri') ? undefined : json['trackUri'],
        'withImprovedShuffle': json['withImprovedShuffle'],
    };
}

export function PutPlaybackRequestToJSON(value?: PutPlaybackRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'contextUri': value.contextUri,
        'trackUri': value.trackUri,
        'withImprovedShuffle': value.withImprovedShuffle,
    };
}

