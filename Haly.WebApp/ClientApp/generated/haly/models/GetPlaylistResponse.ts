/* tslint:disable */
/* eslint-disable */
/**
 * Haly API
 * An ASP.NET Core Web API that adds quality of life improvements to Spotify and helps with music exploration
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { OwnerDto } from './OwnerDto';
import {
    OwnerDtoFromJSON,
    OwnerDtoFromJSONTyped,
    OwnerDtoToJSON,
} from './OwnerDto';
import type { TrackDtoPaginatedList } from './TrackDtoPaginatedList';
import {
    TrackDtoPaginatedListFromJSON,
    TrackDtoPaginatedListFromJSONTyped,
    TrackDtoPaginatedListToJSON,
} from './TrackDtoPaginatedList';

/**
 * 
 * @export
 * @interface GetPlaylistResponse
 */
export interface GetPlaylistResponse {
    /**
     * 
     * @type {string}
     * @memberof GetPlaylistResponse
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof GetPlaylistResponse
     */
    name: string;
    /**
     * 
     * @type {OwnerDto}
     * @memberof GetPlaylistResponse
     */
    owner: OwnerDto;
    /**
     * 
     * @type {string}
     * @memberof GetPlaylistResponse
     */
    imageUrl?: string | null;
    /**
     * 
     * @type {string}
     * @memberof GetPlaylistResponse
     */
    description?: string | null;
    /**
     * 
     * @type {TrackDtoPaginatedList}
     * @memberof GetPlaylistResponse
     */
    tracks: TrackDtoPaginatedList;
}

/**
 * Check if a given object implements the GetPlaylistResponse interface.
 */
export function instanceOfGetPlaylistResponse(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "owner" in value;
    isInstance = isInstance && "tracks" in value;

    return isInstance;
}

export function GetPlaylistResponseFromJSON(json: any): GetPlaylistResponse {
    return GetPlaylistResponseFromJSONTyped(json, false);
}

export function GetPlaylistResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetPlaylistResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'owner': OwnerDtoFromJSON(json['owner']),
        'imageUrl': !exists(json, 'imageUrl') ? undefined : json['imageUrl'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'tracks': TrackDtoPaginatedListFromJSON(json['tracks']),
    };
}

export function GetPlaylistResponseToJSON(value?: GetPlaylistResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'owner': OwnerDtoToJSON(value.owner),
        'imageUrl': value.imageUrl,
        'description': value.description,
        'tracks': TrackDtoPaginatedListToJSON(value.tracks),
    };
}

