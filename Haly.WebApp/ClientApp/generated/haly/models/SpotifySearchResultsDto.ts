/* tslint:disable */
/* eslint-disable */
/**
 * Haly API
 * An ASP.NET Core Web API that adds quality of life improvements to Spotify and helps with music exploration
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ArtistCardDto } from './ArtistCardDto';
import {
    ArtistCardDtoFromJSON,
    ArtistCardDtoFromJSONTyped,
    ArtistCardDtoToJSON,
} from './ArtistCardDto';
import type { PlaylistCardDto } from './PlaylistCardDto';
import {
    PlaylistCardDtoFromJSON,
    PlaylistCardDtoFromJSONTyped,
    PlaylistCardDtoToJSON,
} from './PlaylistCardDto';
import type { ReleaseItemDto } from './ReleaseItemDto';
import {
    ReleaseItemDtoFromJSON,
    ReleaseItemDtoFromJSONTyped,
    ReleaseItemDtoToJSON,
} from './ReleaseItemDto';
import type { TrackDto } from './TrackDto';
import {
    TrackDtoFromJSON,
    TrackDtoFromJSONTyped,
    TrackDtoToJSON,
} from './TrackDto';

/**
 * 
 * @export
 * @interface SpotifySearchResultsDto
 */
export interface SpotifySearchResultsDto {
    /**
     * 
     * @type {Array<ArtistCardDto>}
     * @memberof SpotifySearchResultsDto
     */
    artists?: Array<ArtistCardDto> | null;
    /**
     * 
     * @type {Array<ReleaseItemDto>}
     * @memberof SpotifySearchResultsDto
     */
    albums?: Array<ReleaseItemDto> | null;
    /**
     * 
     * @type {Array<PlaylistCardDto>}
     * @memberof SpotifySearchResultsDto
     */
    playlists?: Array<PlaylistCardDto> | null;
    /**
     * 
     * @type {Array<TrackDto>}
     * @memberof SpotifySearchResultsDto
     */
    tracks?: Array<TrackDto> | null;
}

/**
 * Check if a given object implements the SpotifySearchResultsDto interface.
 */
export function instanceOfSpotifySearchResultsDto(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function SpotifySearchResultsDtoFromJSON(json: any): SpotifySearchResultsDto {
    return SpotifySearchResultsDtoFromJSONTyped(json, false);
}

export function SpotifySearchResultsDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): SpotifySearchResultsDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'artists': !exists(json, 'artists') ? undefined : (json['artists'] === null ? null : (json['artists'] as Array<any>).map(ArtistCardDtoFromJSON)),
        'albums': !exists(json, 'albums') ? undefined : (json['albums'] === null ? null : (json['albums'] as Array<any>).map(ReleaseItemDtoFromJSON)),
        'playlists': !exists(json, 'playlists') ? undefined : (json['playlists'] === null ? null : (json['playlists'] as Array<any>).map(PlaylistCardDtoFromJSON)),
        'tracks': !exists(json, 'tracks') ? undefined : (json['tracks'] === null ? null : (json['tracks'] as Array<any>).map(TrackDtoFromJSON)),
    };
}

export function SpotifySearchResultsDtoToJSON(value?: SpotifySearchResultsDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'artists': value.artists === undefined ? undefined : (value.artists === null ? null : (value.artists as Array<any>).map(ArtistCardDtoToJSON)),
        'albums': value.albums === undefined ? undefined : (value.albums === null ? null : (value.albums as Array<any>).map(ReleaseItemDtoToJSON)),
        'playlists': value.playlists === undefined ? undefined : (value.playlists === null ? null : (value.playlists as Array<any>).map(PlaylistCardDtoToJSON)),
        'tracks': value.tracks === undefined ? undefined : (value.tracks === null ? null : (value.tracks as Array<any>).map(TrackDtoToJSON)),
    };
}

