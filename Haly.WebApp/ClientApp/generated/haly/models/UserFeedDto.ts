/* tslint:disable */
/* eslint-disable */
/**
 * Haly API
 * An ASP.NET Core Web API that adds quality of life improvements to Spotify and helps with music exploration
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { PlaylistCardDto } from './PlaylistCardDto';
import {
    PlaylistCardDtoFromJSON,
    PlaylistCardDtoFromJSONTyped,
    PlaylistCardDtoToJSON,
} from './PlaylistCardDto';
import type { ReleaseItemDto } from './ReleaseItemDto';
import {
    ReleaseItemDtoFromJSON,
    ReleaseItemDtoFromJSONTyped,
    ReleaseItemDtoToJSON,
} from './ReleaseItemDto';

/**
 * 
 * @export
 * @interface UserFeedDto
 */
export interface UserFeedDto {
    /**
     * 
     * @type {Array<PlaylistCardDto>}
     * @memberof UserFeedDto
     */
    playlists: Array<PlaylistCardDto>;
    /**
     * 
     * @type {{ [key: string]: Array<ReleaseItemDto>; }}
     * @memberof UserFeedDto
     */
    albumsByCategory: { [key: string]: Array<ReleaseItemDto>; };
}

/**
 * Check if a given object implements the UserFeedDto interface.
 */
export function instanceOfUserFeedDto(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "playlists" in value;
    isInstance = isInstance && "albumsByCategory" in value;

    return isInstance;
}

export function UserFeedDtoFromJSON(json: any): UserFeedDto {
    return UserFeedDtoFromJSONTyped(json, false);
}

export function UserFeedDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserFeedDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'playlists': ((json['playlists'] as Array<any>).map(PlaylistCardDtoFromJSON)),
        'albumsByCategory': json['albumsByCategory'],
    };
}

export function UserFeedDtoToJSON(value?: UserFeedDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'playlists': ((value.playlists as Array<any>).map(PlaylistCardDtoToJSON)),
        'albumsByCategory': value.albumsByCategory,
    };
}

