/* tslint:disable */
/* eslint-disable */
/**
 * Haly API
 * An ASP.NET Core Web API that adds quality of life improvements to Spotify and helps with music exploration
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { OwnerDto } from './OwnerDto';
import {
    OwnerDtoFromJSON,
    OwnerDtoFromJSONTyped,
    OwnerDtoToJSON,
} from './OwnerDto';

/**
 * 
 * @export
 * @interface PlaylistMetadataDto
 */
export interface PlaylistMetadataDto {
    /**
     * 
     * @type {string}
     * @memberof PlaylistMetadataDto
     */
    description?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PlaylistMetadataDto
     */
    imageUrl?: string | null;
    /**
     * 
     * @type {number}
     * @memberof PlaylistMetadataDto
     */
    likesTotal: number;
    /**
     * 
     * @type {OwnerDto}
     * @memberof PlaylistMetadataDto
     */
    owner: OwnerDto;
}

/**
 * Check if a given object implements the PlaylistMetadataDto interface.
 */
export function instanceOfPlaylistMetadataDto(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "likesTotal" in value;
    isInstance = isInstance && "owner" in value;

    return isInstance;
}

export function PlaylistMetadataDtoFromJSON(json: any): PlaylistMetadataDto {
    return PlaylistMetadataDtoFromJSONTyped(json, false);
}

export function PlaylistMetadataDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): PlaylistMetadataDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'description': !exists(json, 'description') ? undefined : json['description'],
        'imageUrl': !exists(json, 'imageUrl') ? undefined : json['imageUrl'],
        'likesTotal': json['likesTotal'],
        'owner': OwnerDtoFromJSON(json['owner']),
    };
}

export function PlaylistMetadataDtoToJSON(value?: PlaylistMetadataDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'description': value.description,
        'imageUrl': value.imageUrl,
        'likesTotal': value.likesTotal,
        'owner': OwnerDtoToJSON(value.owner),
    };
}

