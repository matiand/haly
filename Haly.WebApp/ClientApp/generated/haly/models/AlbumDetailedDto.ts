/* tslint:disable */
/* eslint-disable */
/**
 * Haly API
 * An ASP.NET Core Web API that adds quality of life improvements to Spotify and helps with music exploration
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AlbumTrackDto } from './AlbumTrackDto';
import {
    AlbumTrackDtoFromJSON,
    AlbumTrackDtoFromJSONTyped,
    AlbumTrackDtoToJSON,
} from './AlbumTrackDto';
import type { ArtistBriefDto } from './ArtistBriefDto';
import {
    ArtistBriefDtoFromJSON,
    ArtistBriefDtoFromJSONTyped,
    ArtistBriefDtoToJSON,
} from './ArtistBriefDto';

/**
 * 
 * @export
 * @interface AlbumDetailedDto
 */
export interface AlbumDetailedDto {
    /**
     * 
     * @type {string}
     * @memberof AlbumDetailedDto
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof AlbumDetailedDto
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof AlbumDetailedDto
     */
    imageUrl?: string | null;
    /**
     * 
     * @type {string}
     * @memberof AlbumDetailedDto
     */
    typeName: string;
    /**
     * 
     * @type {string}
     * @memberof AlbumDetailedDto
     */
    totalDuration: string;
    /**
     * 
     * @type {Array<ArtistBriefDto>}
     * @memberof AlbumDetailedDto
     */
    artists: Array<ArtistBriefDto>;
    /**
     * 
     * @type {Array<AlbumTrackDto>}
     * @memberof AlbumDetailedDto
     */
    tracks: Array<AlbumTrackDto>;
    /**
     * 
     * @type {Array<string>}
     * @memberof AlbumDetailedDto
     */
    copyrights: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof AlbumDetailedDto
     */
    releaseYear: string;
    /**
     * 
     * @type {string}
     * @memberof AlbumDetailedDto
     */
    formattedReleaseDate: string;
}

/**
 * Check if a given object implements the AlbumDetailedDto interface.
 */
export function instanceOfAlbumDetailedDto(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "typeName" in value;
    isInstance = isInstance && "totalDuration" in value;
    isInstance = isInstance && "artists" in value;
    isInstance = isInstance && "tracks" in value;
    isInstance = isInstance && "copyrights" in value;
    isInstance = isInstance && "releaseYear" in value;
    isInstance = isInstance && "formattedReleaseDate" in value;

    return isInstance;
}

export function AlbumDetailedDtoFromJSON(json: any): AlbumDetailedDto {
    return AlbumDetailedDtoFromJSONTyped(json, false);
}

export function AlbumDetailedDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): AlbumDetailedDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'imageUrl': !exists(json, 'imageUrl') ? undefined : json['imageUrl'],
        'typeName': json['typeName'],
        'totalDuration': json['totalDuration'],
        'artists': ((json['artists'] as Array<any>).map(ArtistBriefDtoFromJSON)),
        'tracks': ((json['tracks'] as Array<any>).map(AlbumTrackDtoFromJSON)),
        'copyrights': json['copyrights'],
        'releaseYear': json['releaseYear'],
        'formattedReleaseDate': json['formattedReleaseDate'],
    };
}

export function AlbumDetailedDtoToJSON(value?: AlbumDetailedDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'imageUrl': value.imageUrl,
        'typeName': value.typeName,
        'totalDuration': value.totalDuration,
        'artists': ((value.artists as Array<any>).map(ArtistBriefDtoToJSON)),
        'tracks': ((value.tracks as Array<any>).map(AlbumTrackDtoToJSON)),
        'copyrights': value.copyrights,
        'releaseYear': value.releaseYear,
        'formattedReleaseDate': value.formattedReleaseDate,
    };
}

